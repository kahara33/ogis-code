"""Tests for the xls2csv module."""

import tempfile
from pathlib import Path

import pandas as pd
import pytest

from rag_tabular.excel_to_csv import excel_to_csv, get_rag_tab_path
from util.catvar import DevPhase


@pytest.mark.parametrize("phase", DevPhase)
def test_excel_and_csv(phase):
    """Tests whether the Excel file is consistent with the CSV file."""
    rag_tab_path: Path = get_rag_tab_path()
    current_csv_df = pd.read_csv(rag_tab_path.parent.joinpath(f"csv/{phase.ja}.csv"))
    with tempfile.NamedTemporaryFile(suffix=".csv") as fp:
        excel_to_csv(rag_tab_path, phase, csv_path=Path(fp.name))
        expected_csv_df = pd.read_csv(Path(fp.name))
    assert current_csv_df.equals(expected_csv_df)


@pytest.mark.parametrize("phase", DevPhase)
def test_column_names_of_csv(phase):
    """Tests whether the column names of the CSV file are as expected."""

    csv_df = pd.read_csv(get_rag_tab_path().parent.joinpath(f"csv/{phase.ja}.csv"))
    assert csv_df.columns.tolist() == expected_column_names[phase]


expected_column_names = {
    DevPhase.RD: [
        "システム",
        "算出方法",
        "分類",
        "プロダクト指標(外形)_ページ数_(頁)",
        "プロダクト指標(外形)_文字数_(文字)",
        "プロダクト指標(外形)_投下工数_(人月)",
        "プロダクト指標(外形)_生産性_(頁/人月)",
        "プロセス指標(レビュー)_回数_(回)",
        "プロセス指標(レビュー)_投下工数_(人時)",
        "プロセス指標(レビュー)_指摘件数_(件)",
        "レビュー_工数比率_(%)",
        "1,000文字あたり_回数_(回)",
        "1,000文字あたり_投下工数_工数(人時)",
        "1,000文字あたり_指摘件数_(件)",
        "1ページあたり_回数_(回)",
        "1ページあたり_投下工数_工数(人時)",
        "1ページあたり_指摘件数_(件)",
        "成果物作成1人月あたり_回数_(回)",
        "成果物作成1人月あたり_投下工数_工数(人時)",
        "成果物作成1人月あたり_指摘件数_(件)",
        "レビュー1時間あたり_指摘件数_(件)",
    ],
    DevPhase.DES1: [
        "システム",
        "算出方法",
        "分類",
        "プロダクト指標(外形)_ページ数_(頁)",
        "プロダクト指標(外形)_文字数_(文字)",
        "プロダクト指標(外形)_投下工数_(人月)",
        "プロダクト指標(外形)_生産性_(頁/人月)",
        "プロセス指標(レビュー)_回数_(回)",
        "プロセス指標(レビュー)_投下工数_(人時)",
        "プロセス指標(レビュー)_指摘件数_(件)",
        "レビュー_工数比率_(%)",
        "成果物作成1人月あたり_回数_(回)",
        "成果物作成1人月あたり_投下工数_工数(人時)",
        "成果物作成1人月あたり_指摘件数_(件)",
        "1,000文字あたり_回数_(回)",
        "1,000文字あたり_投下工数_工数(人時)",
        "1,000文字あたり_指摘件数_(件)",
        "1ページあたり_回数_(回)",
        "投下工数_工数(人時)",
        "指摘件数_(件)",
        "レビュー1人月あたり_指摘件数_(件)",
    ],
    DevPhase.DES2: [
        "システム",
        "算出方法",
        "分類",
        "プロダクト指標(外形)_ページ数_(頁)",
        "プロダクト指標(外形)_文字数_(文字)",
        "プロダクト指標(外形)_投下工数_(人月)",
        "プロダクト指標(外形)_生産性_(頁/人月)",
        "プロセス指標(レビュー)_回数_(回)",
        "プロセス指標(レビュー)_投下工数_(人時)",
        "プロセス指標(レビュー)_指摘件数_(件)",
        "レビュー_工数比率_(%)",
        "成果物作成1人月あたり_回数_(回)",
        "成果物作成1人月あたり_投下工数_工数(人時)",
        "成果物作成1人月あたり_指摘件数_(件)",
        "1,000文字あたり_回数_(回)",
        "1,000文字あたり_投下工数_工数(人時)",
        "1,000文字あたり_指摘件数_(件)",
        "1ページあたり_回数_(回)",
        "投下工数_工数(人時)",
        "指摘件数_(件)",
        "レビュー1人月あたり_指摘件数_(件)",
    ],
    DevPhase.IMPL: [
        "システム",
        "算出方法",
        "コード行数_行",
        "関数の数(WMC)_個",
        "McCabe循環複雑度_個",
        "静的解析器出力数_個",
        "単体テストケース密度(予定)_件/KLOC",
        "単体テストケース密度(実績)_件/KLOC",
        "コードレビュー指摘効率_件/人月",
        "テスト仕様書レビュー指摘効率_件/人月",
        "ファイル数_個",
        "コード作成工数_人日",
        "コード行数作成工数比_行/人月",
        "ファイル数作成工数比_個/人月",
        "クラス数_個",
        "単体テストケース数(予定)_件",
        "単体テストケース数(実績)_件",
        "C0カバレッジ_%",
        "コードレビュー投下工数_時間",
        "コードレビュー指摘項目数_件",
        "テスト仕様書レビュー投下工数_時間",
        "テスト仕様書レビュー指摘項目数_件",
        "命令網羅(C0)_○(網羅率100%)の割合_%",
        "命令網羅(C0)_△(網羅率100%未満)の割合_%",
        "命令網羅(C0)_-(対象外)の割合_%",
        "分岐網羅(C1)_○(網羅率100%)の割合_%",
        "分岐網羅(C1)_△(網羅率100%未満)の割合_%",
        "分岐網羅(C1)_-(対象外)の割合_%",
    ],
    DevPhase.INT: [
        "システム",
        "算出方法",
        "テスト仕様書_テストケース数_(予定)",
        "テスト仕様書_テストケース数_(実績)",
        "テスト仕様書_作成工数_(人日)",
        "テスト仕様書_ページ数_(ページ)",
        "テスト仕様書_文字数_(文字)",
        "テスト仕様書/テスト結果(成績表)レビュー_レビュー指摘効率",
        "テスト仕様書/テスト結果(成績表)レビュー_合計_回数",
        "テスト仕様書/テスト結果(成績表)レビュー_合計_時間",
        "テスト仕様書/テスト結果(成績表)レビュー_合計_指摘数",
        "コード行数",
        "テストケース密度_密度",
        "不具合密度_密度",
        "不具合密度_件数",
    ],
    DevPhase.ST: [
        "システム",
        "算出方法",
        "テスト仕様書_テストケース数_(予定)",
        "テスト仕様書_テストケース数_(実績)",
        "テスト仕様書_作成工数_(人日)",
        "テスト仕様書_ページ数_(ページ)",
        "テスト仕様書_文字数_(文字)",
        "テスト仕様書/テスト結果(成績表)レビュー_レビュー指摘効率",
        "テスト仕様書/テスト結果(成績表)レビュー_合計_回数",
        "テスト仕様書/テスト結果(成績表)レビュー_合計_時間",
        "テスト仕様書/テスト結果(成績表)レビュー_合計_指摘数",
        "コード行数",
        "テストケース密度_密度",
        "不具合密度_密度",
        "不具合密度_件数",
    ],
}
